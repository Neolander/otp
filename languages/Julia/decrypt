#!/usr/bin/env julia

include("utility.jl")
include("key.jl")
include("input.jl")

if (length(ARGS) != 1)
  println("Usage: ./decrypt <key>")
  exit(1)
end

if (!is_hex_string(ARGS[1]))
  println("Key must be a hexadecimal string")
  exit(2)
end

key, key_index      = ARGS[1], 1
ciphertext, message = read_from(STDIN), ""

ciphertext_index = 1

while (ciphertext_index < endof(ciphertext))
  start_index, end_index = ciphertext_index, ciphertext_index + 1
  byte, key_index        = next_key_byte(key, key_index)
  ciphertext_byte        = hex_to_decimal(ciphertext[start_index:end_index])

  message *= string(char(byte $ ciphertext_byte))

  ciphertext_index += 2
end

print(message)